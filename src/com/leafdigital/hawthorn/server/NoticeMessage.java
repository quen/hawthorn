/*
Copyright 2009 Samuel Marshall
http://www.leafdigital.com/software/hawthorn/

This file is part of Hawthorn.

Hawthorn is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Hawthorn is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Hawthorn.  If not, see <http://www.gnu.org/licenses/>.
*/
package com.leafdigital.hawthorn.server;

import com.leafdigital.hawthorn.util.JS;

/**
 * System notice sent to channel. This message is generated by the system only,
 * not users.
 */
public class NoticeMessage extends Message
{
	/** Type of message */
	private final static String TYPE = "NOTICE";

	static
	{
		try
		{
			Message.registerType(TYPE, NoticeMessage.class);
		}
		catch(Exception e)
		{
			e.printStackTrace();
			System.exit(0);
		}
	}

	private String notice;

	/**
	 * @param time Time of message
	 * @param channel Channel of message
	 * @param notice Text of notice
	 */
	NoticeMessage(long time, String channel, String notice)
	{
		super(time, channel, "-", "SYSTEM", "Notice");
		this.notice = notice;
	}

	@Override
	protected String getExtraJS()
	{
		return ",text:'" + JS.esc(notice) + "'";
	}

	@Override
	protected String getExtra()
	{
		return " " + notice;
	}

	@Override
	public String getType()
	{
		return TYPE;
	}

	/**
	 * @param time Time of message
	 * @param channel Channel of message
	 * @param ip IP address of user
	 * @param user User who sent message
	 * @param displayName Display name of user
	 * @param extra Bit that goes after all this in the text
	 * @return New message
	 */
	public static NoticeMessage parseMessage(long time, String channel, String ip,
		String user, String displayName, String extra)
	{
		return new NoticeMessage(time, channel, extra.substring(1));
	}
}
